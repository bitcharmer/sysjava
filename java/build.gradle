plugins {
    id "java"
    id "maven-publish"
    id "signing"
}

group "org.sysjava"
version "1.0.0"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'org.scijava:native-lib-loader:2.3.4'
    testImplementation 'junit:junit:4.13.1'
}

task sourceJar(type: Jar) {
    archiveBaseName = "sysjava"
    classifier "sources"
    from sourceSets.main.allJava
}

artifacts {
    archives jar
    archives sourceJar
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            artifactId = "sysjava"
            groupId = group
            version = project.version

            artifact jar
            artifact (file("build/libs/sysjava-${version}.jar.asc")) {
                extension = "jar.asc"
            }

            artifact sourceJar
            artifact (file("build/libs/sysjava-${version}-sources.jar.asc")) {
                classifier = "sources"
                extension = "jar.asc"
            }

            customizePom(pom)
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }
        }
    }

    repositories {
        maven {
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Linux syscalls for Java'
            name 'SysJava'
            url 'https://github.com/bitcharmer/sysjava'
            organization {
                name 'com.github.bitcharmer'
                url 'https://github.com/bitcharmer'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/bitcharmer/sysjava/issues'
            }
            licenses {
                license {
                    name 'GNU 3.0'
                    url 'https://github.com/bitcharmer/sysjava/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/bitcharmer/sysjava'
                connection 'scm:git:git://github.com/bitcharmer/sysjava.git'
                developerConnection 'scm:git:ssh://git@github.com:bitcharmer/sysjava.git'
            }
            developers {
                developer {
                    name 'Wojtek'
                }
            }
        }
    }
}

jar {
    archiveBaseName = "sysjava"
    dependsOn ":native:sysjavaSharedLibrary"
    from("${project(':native').buildDir.absolutePath}/libs/sysjava/shared/") {
        into("natives/linux_64")
        include("*.so")
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}
